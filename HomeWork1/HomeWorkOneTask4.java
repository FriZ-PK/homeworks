package HomeWork1;

public class HomeWorkOneTask4 {
    public static void main(String[] args) {
        int a2 = 2;
        int a3 = 3;
        int a5 = 5;
        int a6 = 6;
        int a7 = 7;
        int a8 = 8;
        int a12 = 12;
        int a20 = 20;
        int a22 = 22;
        int a68 = 68;
        int a119 = 119;
        boolean t = true;
        boolean f = false;

        System.out.println(a5 + a2 / 1.0 / a8);      // В приоритете оператор "/", 2/8 = 0,25 + 5 = 5.25
        System.out.println( (a5 + a2) / 1.0 / a8);   // В приоритете выражение в скобках, 5 + 2 = 7 / 8 = 0.875
        System.out.println( (a5 + a2++) / 1.0 / a8); // В приоритете выражение в скобках, 5 + 2 = 7 / 8 = 0.875. Оператор "++", пост-унарный и увеличивает 2 на 1 после получения результата данного выражения
        a2 = 2;
        a8 = 8;
        System.out.println( (a5 + a2++) / --a8); // Результат данного выражения равен 1 т.к Оператор "--" пре-унарный иуменьшает 8 на 1 до деления на 7
        a2 = 2;
        a8 = 8;
        System.out.println( (a5 * a2 >> a2++) / 1.0 / --a8 ); // В приоритете оператор "*", 5 * 2 = 10, "++" пост-унарный, 00001010 сдивгается вправо на 2 бита, 00000010 = 2.Результат :  2 / 7 = 0.28571...
        a2 = 2;
        a8 = 8;
        System.out.println( (a5 + a7 > a20 ? a68 : a22 * a2 >> a2++) / 1.0 / --a8); // 5 + 7 = 13. 13 меньше 20(false), выполняется выражение 22 * 2 = 44. Оператор "++" пост-унарный.00101100 сдвигается вправо на 2 бита, 00001011 = 11.Результат : 11 / 7 = 1.57142...
        a2 = 2;
        a8 = 8;
        //System.out.println( (a5 + a7 > a20 ? a68 >= a68 : a22 * a2 >> a2++) / --a8); // Результатом может быть boolean, который нельзя делить на --8
        System.out.println(a6 - a2 > a3 && a12 * a12 <= a119); // 6 - 2 = 4. 4 > 3 (true) && 12 * 12 = 144 (false)
        System.out.println(t && f); // Оператор && ожидает истину с обеих сторон.Результат, как и в предыдущем примере - false.
    }
}
